Object subclass: #Cell	instanceVariableNames: 'activeSegments exitSides gridLocation'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!Cell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 18:50'!activeSegments	^ activeSegments! !!Cell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 18:50'!activeSegments: anObject	activeSegments := anObject! !!Cell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 19:21'!exitSideFor: aSymbol	^self exitSides at: aSymbol! !!Cell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 18:50'!exitSides	^ exitSides! !!Cell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 18:50'!exitSides: anObject	exitSides := anObject! !!Cell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 21:50'!gridLocation	^ gridLocation! !!Cell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 21:50'!gridLocation: anObject	gridLocation := anObject! !!Cell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 19:23'!laserEntersFrom: aSymbol	| exit |	self activeSegments at: aSymbol put: true.	exit := self exitSideFor: aSymbol.	self activeSegments at: exit put: true.! !!Cell methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 18:54'!initialize	super initialize.	self initializeActiveSegments.! !!Cell methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 18:52'!initializeActiveSegments	self activeSegments: Dictionary new.	self activeSegments at: #north put: false.	self activeSegments at: #east put: false.	self activeSegments at: #south put: false.	self activeSegments at: #west put: false.! !!Cell methodsFor: 'testing' stamp: 'sjh 4/15/2013 19:22'!isOff	^self isOn not! !!Cell methodsFor: 'testing' stamp: 'sjh 4/15/2013 19:22'!isOn	^self activeSegments values anySatisfy: [:each | each = true]! !!Cell methodsFor: 'testing' stamp: 'sjh 4/15/2013 19:23'!isSegmentOnFor: aSymbol	^self activeSegments at: aSymbol! !Cell subclass: #BlankCell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!BlankCell methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 18:54'!initialize	super initialize.	self initializeExitSides.! !!BlankCell methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 18:33'!initializeExitSides	self exitSides: Dictionary new.	self exitSides at: #north put: #south.	self exitSides at: #east put: #west.	self exitSides at: #south put: #north.	self exitSides at: #west put: #east.! !Object subclass: #Grid	instanceVariableNames: 'cells laserIsActive numberOfColumns numberOfRows laserBeamPath'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 23:21'!activateCellsInPath	self calculatePath.	self laserBeamPath do: [:pe | 		pe activateCell]! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 23:15'!at: aPoint	^self cells at: aPoint ifAbsent: []! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 21:51'!at: aPoint put: aCell	aCell gridLocation: aPoint. 	self cells at: aPoint put: aCell! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 23:20'!calculatePath	| cell dirSym element next |	self laserBeamPath: OrderedCollection new.	cell := self startingCell.	dirSym := #south.	element := LaserPathElement cell: cell entrySide: dirSym.	[self laserBeamPath addLast: element.	next := element nextElementIn: self.	next isNil] whileFalse: [		element := next]! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 20:19'!cells	^ cells! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 20:19'!cells: anObject	cells := anObject! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 21:47'!laserBeamPath	^ laserBeamPath! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 21:47'!laserBeamPath: anObject	laserBeamPath := anObject! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 20:19'!laserIsActive	^ laserIsActive! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 20:19'!laserIsActive: anObject	laserIsActive := anObject! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 20:24'!numberOfColumns	numberOfColumns isNil ifTrue: [self numberOfColumns: 1].	^ numberOfColumns! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 20:19'!numberOfColumns: anObject	numberOfColumns := anObject! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 20:24'!numberOfRows	numberOfRows isNil ifTrue: [self numberOfRows: 1].	^ numberOfRows! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 20:19'!numberOfRows: anObject	numberOfRows := anObject! !!Grid methodsFor: 'accessing' stamp: 'sjh 4/15/2013 21:49'!startingCell	"return the starting cell for the laser game-i.e., the bottom-left cell in the grid"	| pt |	pt := 1@(self numberOfRows).	^self at: pt! !!Grid methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 20:21'!initialize	super initialize.	self laserIsActive: false.	self initializeCells.! !!Grid methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 23:24'!initializeCells	self cells: Dictionary new.	1 to: self numberOfColumns do: [:x |		1 to: self numberOfRows do: [:y |			| pt cell |			pt := x@y.			cell := BlankCell new.			self at: pt put: cell]]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Grid class	instanceVariableNames: ''!!Grid class methodsFor: 'instance creation' stamp: 'sjh 4/15/2013 20:39'!newOfSize: aPoint	| model |	model := self basicNew.	model		numberOfRows: aPoint y;		numberOfColumns: aPoint x.	model initialize.	^model! !Object subclass: #GridDirection	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GridDirection class	instanceVariableNames: ''!!GridDirection class methodsFor: 'as yet unclassified' stamp: 'sjh 4/16/2013 00:08'!directionFor: aSymbol	^self subclasses detect: [:cls | cls directionSymbol = aSymbol]! !GridDirection subclass: #GridDirectionEast	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GridDirectionEast class	instanceVariableNames: ''!!GridDirectionEast class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 23:27'!adjacentInversionSymbol	^#west! !!GridDirectionEast class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 22:50'!directionSymbol	^#east! !!GridDirectionEast class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 22:51'!vector	^(1@0)! !GridDirection subclass: #GridDirectionNorth	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GridDirectionNorth class	instanceVariableNames: ''!!GridDirectionNorth class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 23:27'!adjacentInversionSymbol	^#south! !!GridDirectionNorth class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 21:58'!directionSymbol	^#north! !!GridDirectionNorth class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 22:51'!vector	^(0@ -1)! !GridDirection subclass: #GridDirectionSouth	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GridDirectionSouth class	instanceVariableNames: ''!!GridDirectionSouth class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 23:27'!adjacentInversionSymbol	^#north! !!GridDirectionSouth class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 21:58'!directionSymbol	^#south! !!GridDirectionSouth class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 22:51'!vector	^(0@1)! !GridDirection subclass: #GridDirectionWest	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!GridDirectionWest class	instanceVariableNames: ''!!GridDirectionWest class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 23:27'!adjacentInversionSymbol	^#east! !!GridDirectionWest class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 22:51'!directionSymbol	^#west! !!GridDirectionWest class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 22:51'!vector	^(-1@0)! !Object subclass: #LaserPathElement	instanceVariableNames: 'cell entrySide'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!LaserPathElement methodsFor: 'accessing' stamp: 'sjh 4/15/2013 23:11'!cell	^ cell! !!LaserPathElement methodsFor: 'accessing' stamp: 'sjh 4/15/2013 23:11'!cell: anObject	cell := anObject! !!LaserPathElement methodsFor: 'accessing' stamp: 'sjh 4/15/2013 23:11'!entrySide	^ entrySide! !!LaserPathElement methodsFor: 'accessing' stamp: 'sjh 4/15/2013 23:11'!entrySide: anObject	entrySide := anObject! !!LaserPathElement methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 23:22'!activateCell	self cell laserEntersFrom: self entrySide! !!LaserPathElement methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 23:29'!nextElementIn: aGrid	| loc dirSym direction vector newLoc nextCell |	loc := self cell gridLocation.	dirSym := self cell exitSideFor: self entrySide.	dirSym isNil ifTrue: [^nil].	direction := GridDirection directionFor: dirSym.	vector := direction vector.	newLoc := loc + vector.	nextCell := aGrid at: newLoc.	^nextCell isNil		ifTrue: [nil]		ifFalse: [self class cell: nextCell entrySide: direction adjacentInversionSymbol]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LaserPathElement class	instanceVariableNames: ''!!LaserPathElement class methodsFor: 'as yet unclassified' stamp: 'sjh 4/15/2013 23:13'!cell: aCell entrySide: aSymbol	| model |	model := self basicNew.	model		cell: aCell;		entrySide: aSymbol.	model initialize.	^model! !Cell subclass: #MirrorCell	instanceVariableNames: 'leansLeft'	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!MirrorCell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 19:25'!leanLeft	self leansLeft: true.	self exitSides at: #north put: #east.	self exitSides at: #east put: #north.	self exitSides at: #south put: #west.	self exitSides at: #west put: #south.! !!MirrorCell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 19:25'!leanRight	self leansLeft: false.	self exitSides at: #north put: #west.	self exitSides at: #east put: #south.	self exitSides at: #south put: #east.	self exitSides at: #west put: #north.! !!MirrorCell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 18:41'!leansLeft	^ leansLeft! !!MirrorCell methodsFor: 'accessing' stamp: 'sjh 4/15/2013 18:41'!leansLeft: anObject	leansLeft := anObject! !!MirrorCell methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 19:20'!initialize	super initialize.	self initializeExitSides.	self leanLeft! !!MirrorCell methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 19:21'!initializeExitSides	self exitSides: Dictionary new.! !!MirrorCell methodsFor: 'testing' stamp: 'sjh 4/15/2013 18:43'!isLeft	^self leansLeft! !!MirrorCell methodsFor: 'testing' stamp: 'sjh 4/15/2013 18:43'!isRight	^self isLeft not! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MirrorCell class	instanceVariableNames: ''!!MirrorCell class methodsFor: 'instance creation' stamp: 'sjh 4/15/2013 19:58'!leanLeft	^super new leanLeft! !!MirrorCell class methodsFor: 'instance creation' stamp: 'sjh 4/15/2013 19:58'!leanRight	^super new leanRight! !Cell subclass: #TargetCell	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Laser-Game-Model'!!TargetCell methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 20:04'!initialize	super initialize.	self initializeExitSides.! !!TargetCell methodsFor: 'initialize-release' stamp: 'sjh 4/15/2013 20:03'!initializeExitSides	self exitSides: Dictionary new.	self exitSides at: #north put: nil.	self exitSides at: #east put: nil.	self exitSides at: #south put: nil.	self exitSides at: #west put: nil.! !